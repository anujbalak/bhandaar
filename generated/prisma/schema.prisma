// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text
  expiresAt DateTime
}

model User {
  id       String   @id @default(uuid())
  name     String   @db.VarChar(255)
  email    String   @unique
  password String
  File     File[]
  Folder   Folder[]
}

model File {
  id            String   @id @default(uuid())
  originalname  String   @db.Text
  filename      String   @db.VarChar(255)
  size          Int      @db.Integer
  uploader      User     @relation(fields: [uploaderId], references: [id])
  uploaderId    String
  uploadtime    DateTime @default(now())
  downloadCount Int      @default(0) @db.Integer
  Folder        Folder?  @relation(fields: [folderId], references: [id])
  folderId      String?
  home          Boolean  @default(true)
}

model Folder {
  id             String   @id @default(uuid())
  name           String   @db.VarChar(255)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  files          File[]
  parentFolderId String?
  parentFolder   Folder?  @relation("FolderDetails", fields: [parentFolderId], references: [id])
  folders        Folder[] @relation("FolderDetails")
  uploader       User     @relation(fields: [uploaderId], references: [id])
  uploaderId     String
}
